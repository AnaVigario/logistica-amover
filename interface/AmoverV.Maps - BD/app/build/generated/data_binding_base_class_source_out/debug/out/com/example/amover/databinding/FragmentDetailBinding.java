// Generated by view binder compiler. Do not edit!
package com.example.amover.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.amover.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentDetailBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final LinearLayout linearLayoutLatitude;

  @NonNull
  public final LinearLayout linearLayoutTask;

  @NonNull
  public final ImageView ruleImage;

  @NonNull
  public final TextView taskAddressText;

  @NonNull
  public final TextView taskIdText;

  @NonNull
  public final TextView taskLatitudeText;

  @NonNull
  public final TextView taskLongitudeText;

  @NonNull
  public final TextView taskNameText;

  @NonNull
  public final TextView taskNoteText;

  @NonNull
  public final TextView taskTimeText;

  @NonNull
  public final TextView taskTimewindowText;

  @NonNull
  public final TextView taskTypeText;

  private FragmentDetailBinding(@NonNull CardView rootView,
      @NonNull LinearLayout linearLayoutLatitude, @NonNull LinearLayout linearLayoutTask,
      @NonNull ImageView ruleImage, @NonNull TextView taskAddressText, @NonNull TextView taskIdText,
      @NonNull TextView taskLatitudeText, @NonNull TextView taskLongitudeText,
      @NonNull TextView taskNameText, @NonNull TextView taskNoteText,
      @NonNull TextView taskTimeText, @NonNull TextView taskTimewindowText,
      @NonNull TextView taskTypeText) {
    this.rootView = rootView;
    this.linearLayoutLatitude = linearLayoutLatitude;
    this.linearLayoutTask = linearLayoutTask;
    this.ruleImage = ruleImage;
    this.taskAddressText = taskAddressText;
    this.taskIdText = taskIdText;
    this.taskLatitudeText = taskLatitudeText;
    this.taskLongitudeText = taskLongitudeText;
    this.taskNameText = taskNameText;
    this.taskNoteText = taskNoteText;
    this.taskTimeText = taskTimeText;
    this.taskTimewindowText = taskTimewindowText;
    this.taskTypeText = taskTypeText;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.linear_layout_latitude;
      LinearLayout linearLayoutLatitude = ViewBindings.findChildViewById(rootView, id);
      if (linearLayoutLatitude == null) {
        break missingId;
      }

      id = R.id.linear_layout_task;
      LinearLayout linearLayoutTask = ViewBindings.findChildViewById(rootView, id);
      if (linearLayoutTask == null) {
        break missingId;
      }

      id = R.id.rule_image;
      ImageView ruleImage = ViewBindings.findChildViewById(rootView, id);
      if (ruleImage == null) {
        break missingId;
      }

      id = R.id.task_address_text;
      TextView taskAddressText = ViewBindings.findChildViewById(rootView, id);
      if (taskAddressText == null) {
        break missingId;
      }

      id = R.id.task_id_text;
      TextView taskIdText = ViewBindings.findChildViewById(rootView, id);
      if (taskIdText == null) {
        break missingId;
      }

      id = R.id.task_latitude_text;
      TextView taskLatitudeText = ViewBindings.findChildViewById(rootView, id);
      if (taskLatitudeText == null) {
        break missingId;
      }

      id = R.id.task_longitude_text;
      TextView taskLongitudeText = ViewBindings.findChildViewById(rootView, id);
      if (taskLongitudeText == null) {
        break missingId;
      }

      id = R.id.task_name_text;
      TextView taskNameText = ViewBindings.findChildViewById(rootView, id);
      if (taskNameText == null) {
        break missingId;
      }

      id = R.id.task_note_text;
      TextView taskNoteText = ViewBindings.findChildViewById(rootView, id);
      if (taskNoteText == null) {
        break missingId;
      }

      id = R.id.task_time_text;
      TextView taskTimeText = ViewBindings.findChildViewById(rootView, id);
      if (taskTimeText == null) {
        break missingId;
      }

      id = R.id.task_timewindow_text;
      TextView taskTimewindowText = ViewBindings.findChildViewById(rootView, id);
      if (taskTimewindowText == null) {
        break missingId;
      }

      id = R.id.task_type_text;
      TextView taskTypeText = ViewBindings.findChildViewById(rootView, id);
      if (taskTypeText == null) {
        break missingId;
      }

      return new FragmentDetailBinding((CardView) rootView, linearLayoutLatitude, linearLayoutTask,
          ruleImage, taskAddressText, taskIdText, taskLatitudeText, taskLongitudeText, taskNameText,
          taskNoteText, taskTimeText, taskTimewindowText, taskTypeText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
